{
	"info": {
		"_postman_id": "555163c8-1ae1-4c64-a21a-f1fc8b25e6e1",
		"name": "Advanced Task Management",
		"description": "Endpoints for user authentication and authorization",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17315451"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"if (jsonData && jsonData.data) {\r",
									"    pm.environment.set(\"accessToken\", jsonData.data.accessToken);\r",
									"    pm.environment.set(\"refreshToken\", jsonData.data.refreshToken);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"cagri\",\n    \"lastName\": \"kilic\",\n    \"email\": \"test@example.com\",\n    \"password\": \"A1b_xyz23K\",\n    \"confirmPassword\": \"A1b_xyz23K\",\n    \"departmentId\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user in the system"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData.data) {",
									"    pm.environment.set(\"accessToken\", jsonData.data.accessToken);",
									"    pm.environment.set(\"refreshToken\", jsonData.data.refreshToken);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"cagri@example.com\",\n    \"password\": \"A1b_xyz23K\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login to the system with existing credentials"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get details of the currently logged in user"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData.data) {",
									"    pm.environment.set(\"accessToken\", jsonData.data.accessToken);",
									"    pm.environment.set(\"refreshToken\", jsonData.data.refreshToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh-token"
							]
						},
						"description": "Refresh the access token using a valid refresh token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout from the system"
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe2@example.com\",\n  \"password\": \"A1b_xyz23K\",\n  \"departmentId\": 1,\n  \"roles\": [\"ADMIN\", \"PROJECT_MANAGER\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Create a new user (Admin only)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"XTEAM\",\n  \"lastName\": \"MEMBERX\",\n  \"email\": \"teamMember@example.com\",\n  \"departmentId\": 3\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Update an existing user (Admin or resource owner)"
					},
					"response": []
				},
				{
					"name": "Update User Roles",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"roles\":[\"PROJECT_MANAGER\", \"TEAM_LEADER\"]\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}/roles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}",
								"roles"
							]
						},
						"description": "Update user roles (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Get a user by ID (Admin, Project managers or resource owner)"
					},
					"response": []
				},
				{
					"name": "Get User by Email",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/by-email/{{email}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"by-email",
								"{{email}}"
							]
						},
						"description": "Get a user by email (Admin, Project managers or self)"
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Get all users (Admin and Project managers)"
					},
					"response": []
				},
				{
					"name": "Get Users by Department",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/by-department/{{departmentId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"by-department",
								"{{departmentId}}"
							]
						},
						"description": "Get users by department ID (Admin, Project managers, Team leaders)"
					},
					"response": []
				},
				{
					"name": "Get Users by Role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/by-role/{{role}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"by-role",
								"{{role}}"
							]
						},
						"description": "Get users by role (Admin and Project managers)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/users/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						},
						"description": "Delete a user (Admin or resource owner)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Department",
			"item": [
				{
					"name": "Create Department",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Engineering Test\",\n  \"description\": \"Software Engineering Department Test\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/departments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"departments"
							]
						},
						"description": "Create a new department (Admin or Project Group Manager only)"
					},
					"response": []
				},
				{
					"name": "Update Department",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Engineering & Development Test\",\n  \"description\": \"Software Engineering and Development Department\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/departments/{{departmentId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"departments",
								"{{departmentId}}"
							]
						},
						"description": "Update an existing department (Admin or Project Group Manager only)"
					},
					"response": []
				},
				{
					"name": "Get Department by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/departments/{{departmentId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"departments",
								"{{departmentId}}"
							]
						},
						"description": "Get a department by ID (Admin, Project Group Manager, Project Manager, or Team Leader)"
					},
					"response": []
				},
				{
					"name": "Get Department by Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/departments/by-name/{{departmentName}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"departments",
								"by-name",
								"{{departmentName}}"
							]
						},
						"description": "Get a department by name (Admin, Project Group Manager, Project Manager, or Team Leader)"
					},
					"response": []
				},
				{
					"name": "Get All Departments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/departments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"departments"
							]
						},
						"description": "Get all departments (Any authenticated user)"
					},
					"response": []
				},
				{
					"name": "Delete Department",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/departments/{{departmentId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"departments",
								"{{departmentId}}"
							]
						},
						"description": "Delete a department (Admin only)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Project",
			"item": [
				{
					"name": "Create Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Project Alpha\",\n    \"description\": \"Description for Project Alpha\",\n    \"departmentId\": 1,\n    \"teamMemberIds\": [\"70226cdb-10a9-4561-bc84-0d50ca47eb26\", \"fa112b84-6174-4986-9ba0-93e51a9faca7\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects"
							]
						},
						"description": "Create a new project - Requires ADMIN, PROJECT_GROUP_MANAGER, or PROJECT_MANAGER role"
					},
					"response": []
				},
				{
					"name": "Update Project",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Project Alpha\",\n    \"description\": \"Updated description for Project Alpha\",\n    \"departmentId\": 2,\n    \"teamMemberIds\": [\"70226cdb-10a9-4561-bc84-0d50ca47eb26\", \"09f3e509-19a6-4d55-8d2e-ee9c4608e847\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{project_id}}"
							]
						},
						"description": "Update an existing project - Requires ADMIN, PROJECT_GROUP_MANAGER, or PROJECT_MANAGER role"
					},
					"response": []
				},
				{
					"name": "Get Project By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{project_id}}"
							]
						},
						"description": "Get a project by ID - Available to all authenticated users"
					},
					"response": []
				},
				{
					"name": "Get All Projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects"
							]
						},
						"description": "Get all projects - Available to all authenticated users"
					},
					"response": []
				},
				{
					"name": "Get Projects By Department ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/department/{{department_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"department",
								"{{department_id}}"
							]
						},
						"description": "Get projects by department ID - Available to all authenticated users"
					},
					"response": []
				},
				{
					"name": "Get Projects By Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/status/{{project_status}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"status",
								"{{project_status}}"
							]
						},
						"description": "Get projects by status - Available to all authenticated users (Values: IN_PROGRESS, CANCELLED, COMPLETED)"
					},
					"response": []
				},
				{
					"name": "Get Projects By Team Member ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/team-member/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"team-member",
								"{{user_id}}"
							]
						},
						"description": "Get projects by team member ID - Available to all authenticated users"
					},
					"response": []
				},
				{
					"name": "Add Team Member to Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}/team-members/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{project_id}}",
								"team-members",
								"{{user_id}}"
							]
						},
						"description": "Add a team member to a project - Requires ADMIN, PROJECT_GROUP_MANAGER, PROJECT_MANAGER, or TEAM_LEADER role"
					},
					"response": []
				},
				{
					"name": "Remove Team Member from Project",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}/team-members/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{project_id}}",
								"team-members",
								"{{user_id}}"
							]
						},
						"description": "Remove a team member from a project - Requires ADMIN, PROJECT_GROUP_MANAGER, PROJECT_MANAGER, or TEAM_LEADER role"
					},
					"response": []
				},
				{
					"name": "Update Project Status",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"newStatus\": \"COMPLETED\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{project_id}}",
								"status"
							]
						},
						"description": "Update a project's status - Requires ADMIN, PROJECT_GROUP_MANAGER, or PROJECT_MANAGER role (Values: IN_PROGRESS, CANCELLED, COMPLETED)"
					},
					"response": []
				},
				{
					"name": "Delete Project",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/projects/{{project_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"projects",
								"{{project_id}}"
							]
						},
						"description": "Delete a project (soft delete) - Requires ADMIN, PROJECT_GROUP_MANAGER, or PROJECT_MANAGER role"
					},
					"response": []
				}
			]
		},
		{
			"name": "Task",
			"item": [
				{
					"name": "Create Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Implement User Authentication\",\n    \"userStory\": \"As a user, I want to be able to log in to the system so that I can access my tasks\",\n    \"acceptanceCriteria\": \"1. User can log in with email and password\\n2. System validates credentials\\n3. User receives JWT token\\n4. Invalid credentials show appropriate error message\",\n    \"priority\": \"HIGH\",\n    \"projectId\": \"0073f99a-4bc0-4ea0-b7b1-3112725eb8a2\",\n    \"assignedUserId\": \"09f3e509-19a6-4d55-8d2e-ee9c4608e847\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks"
							]
						},
						"description": "Create a new task - Requires ADMIN, PROJECT_MANAGER, or TEAM_LEADER role"
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Implement Enhanced User Authentication\",\n    \"userStory\": \"As a user, I want to be able to log in to the system with various methods so that I can access my tasks securely\",\n    \"acceptanceCriteria\": \"1. User can log in with email and password\\n2. User can log in with social accounts\\n3. System validates credentials\\n4. User receives JWT token\\n5. Invalid credentials show appropriate error message\",\n    \"priority\": \"CRITICAL\",\n    \"assignedUserId\": \"70226cdb-10a9-4561-bc84-0d50ca47eb26\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}"
							]
						},
						"description": "Update an existing task - Requires ADMIN, PROJECT_MANAGER, or TEAM_LEADER role"
					},
					"response": []
				},
				{
					"name": "Get Task By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}"
							]
						},
						"description": "Get detailed information for a task by ID - Available to all authenticated users"
					},
					"response": []
				},
				{
					"name": "Get All Tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks"
							]
						},
						"description": "Get all tasks - Available to all authenticated users"
					},
					"response": []
				},
				{
					"name": "Get Tasks By Project ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/project/{{project_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"project",
								"{{project_id}}"
							]
						},
						"description": "Get all tasks for a specific project - Available to all authenticated users"
					},
					"response": []
				},
				{
					"name": "Get Tasks By Assigned User ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/assigned-user/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"assigned-user",
								"{{user_id}}"
							]
						},
						"description": "Get all tasks assigned to a specific user - Available to all authenticated users"
					},
					"response": []
				},
				{
					"name": "Get Tasks By State",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/state/{{task_state}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"state",
								"{{task_state}}"
							]
						},
						"description": "Get all tasks with a specific state - Available to all authenticated users (Values: BACKLOG, IN_ANALYSIS, IN_PROGRESS, BLOCKED, CANCELLED, COMPLETED)"
					},
					"response": []
				},
				{
					"name": "Get Tasks By Priority",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/priority/{{task_priority}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"priority",
								"{{task_priority}}"
							]
						},
						"description": "Get all tasks with a specific priority - Available to all authenticated users (Values: CRITICAL, HIGH, MEDIUM, LOW)"
					},
					"response": []
				},
				{
					"name": "Update Task State",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"newState\": \"IN_PROGRESS\",\n    \"reason\": \"Starting implementation phase\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}/state",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}",
								"state"
							]
						},
						"description": "Update a task's state - Available to all authenticated users (Reason required for BLOCKED and CANCELLED states)"
					},
					"response": []
				},
				{
					"name": "Assign Task To User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}/assign/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}",
								"assign",
								"{{user_id}}"
							]
						},
						"description": "Assign a task to a user - Requires ADMIN, PROJECT_MANAGER, or TEAM_LEADER role"
					},
					"response": []
				},
				{
					"name": "Unassign Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}/unassign",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}",
								"unassign"
							]
						},
						"description": "Remove the assigned user from a task - Requires ADMIN, PROJECT_MANAGER, or TEAM_LEADER role"
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"description": "JWT token for authorization"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}"
							]
						},
						"description": "Delete (soft delete) a task - Requires ADMIN, PROJECT_MANAGER, or TEAM_LEADER role"
					},
					"response": []
				}
			]
		},
		{
			"name": "Task State History",
			"item": [
				{
					"name": "Get Task State History By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/task-state-histories/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"task-state-histories",
								"1"
							]
						},
						"description": "Retrieves a specific task state history by its ID"
					},
					"response": []
				},
				{
					"name": "Get Task State Histories By Task ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/task-state-histories/task/{{task_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"task-state-histories",
								"task",
								"{{task_id}}"
							]
						},
						"description": "Retrieves all task state histories for a specific task"
					},
					"response": []
				},
				{
					"name": "Get Task State Histories By User ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/task-state-histories/user/{{user_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"task-state-histories",
								"user",
								"{{user_id}}"
							]
						},
						"description": "Retrieves all task state histories changed by a specific user"
					},
					"response": []
				},
				{
					"name": "Get Task State Histories By Old State",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/task-state-histories/old-state/{{task_state}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"task-state-histories",
								"old-state",
								"{{task_state}}"
							]
						},
						"description": "Retrieves all task state histories with a specific old state"
					},
					"response": []
				},
				{
					"name": "Get Task State Histories By New State",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/task-state-histories/new-state/{{task_state}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"task-state-histories",
								"new-state",
								"{{task_state}}"
							]
						},
						"description": "Retrieves all task state histories with a specific new state"
					},
					"response": []
				},
				{
					"name": "Get Task State Histories By Date Range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/task-state-histories/date-range?startDate=2023-01-01T00:00:00&endDate=2025-12-31T23:59:59",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"task-state-histories",
								"date-range"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2023-01-01T00:00:00"
								},
								{
									"key": "endDate",
									"value": "2025-12-31T23:59:59"
								}
							]
						},
						"description": "Retrieves all task state histories within a specific date range"
					},
					"response": []
				}
			]
		},
		{
			"name": "Attachment",
			"item": [
				{
					"name": "Upload File",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/cagri/Desktop/AdvancedTaskManagerEER.png"
								},
								{
									"key": "taskId",
									"value": "aeff0078-1860-4ca9-a911-e8471667e9d5",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Sample attachment description",
									"type": "text",
									"disabled": true
								},
								{
									"key": "fileName",
									"value": "testFİleName",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/attachments/upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attachments",
								"upload"
							]
						},
						"description": "Uploads a file as an attachment to a task"
					},
					"response": []
				},
				{
					"name": "Download File",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/attachments/download/9",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attachments",
								"download",
								"9"
							]
						},
						"description": "Downloads a specific attachment file by its ID"
					},
					"response": []
				},
				{
					"name": "Get Attachment By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/attachments/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attachments",
								"1"
							]
						},
						"description": "Retrieves attachment metadata by ID"
					},
					"response": []
				},
				{
					"name": "Get Attachments By Task ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/attachments/task/{{task_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attachments",
								"task",
								"{{task_id}}"
							]
						},
						"description": "Retrieves all attachments for a specific task"
					},
					"response": []
				},
				{
					"name": "Get Attachments By User ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/attachments/user/{{user_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attachments",
								"user",
								"{{user_id}}"
							]
						},
						"description": "Retrieves all attachments uploaded by a specific user (Admin, Project Manager, Team Leader only)"
					},
					"response": []
				},
				{
					"name": "Delete Attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/attachments/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attachments",
								"2"
							]
						},
						"description": "Deletes a specific attachment by its ID"
					},
					"response": []
				}
			]
		},
		{
			"name": "Comment",
			"item": [
				{
					"name": "Create Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"This is a test comment\",\n  \"taskId\": \"aeff0078-1860-4ca9-a911-e8471667e9d5\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments"
							]
						},
						"description": "Creates a new comment for a specific task"
					},
					"response": []
				},
				{
					"name": "Update Comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"Updated comment content\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/comments/6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments",
								"6"
							]
						},
						"description": "Updates an existing comment by its ID"
					},
					"response": []
				},
				{
					"name": "Get Comment By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/comments/6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments",
								"6"
							]
						},
						"description": "Retrieves a specific comment by its ID"
					},
					"response": []
				},
				{
					"name": "Get Comments By Task ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/comments/task/{{task_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments",
								"task",
								"{{task_id}}"
							]
						},
						"description": "Retrieves all comments for a specific task"
					},
					"response": []
				},
				{
					"name": "Get Comments By User ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/comments/user/{{user_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments",
								"user",
								"{{user_id}}"
							]
						},
						"description": "Retrieves all comments created by a specific user (available only to management roles)"
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/comments/7",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments",
								"7"
							]
						},
						"description": "Soft deletes a comment by its ID"
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}